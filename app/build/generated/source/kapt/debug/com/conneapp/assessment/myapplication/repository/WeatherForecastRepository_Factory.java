// Generated by Dagger (https://dagger.dev).
package com.conneapp.assessment.myapplication.repository;

import com.conneapp.assessment.myapplication.retrofit.WeatherForecastAPI;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WeatherForecastRepository_Factory implements Factory<WeatherForecastRepository> {
  private final Provider<WeatherForecastAPI> weatherForecastAPIProvider;

  public WeatherForecastRepository_Factory(
      Provider<WeatherForecastAPI> weatherForecastAPIProvider) {
    this.weatherForecastAPIProvider = weatherForecastAPIProvider;
  }

  @Override
  public WeatherForecastRepository get() {
    return newInstance(weatherForecastAPIProvider.get());
  }

  public static WeatherForecastRepository_Factory create(
      Provider<WeatherForecastAPI> weatherForecastAPIProvider) {
    return new WeatherForecastRepository_Factory(weatherForecastAPIProvider);
  }

  public static WeatherForecastRepository newInstance(WeatherForecastAPI weatherForecastAPI) {
    return new WeatherForecastRepository(weatherForecastAPI);
  }
}
