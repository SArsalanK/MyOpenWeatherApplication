// Generated by Dagger (https://dagger.dev).
package com.conneapp.assessment.myapplication;

import com.conneapp.assessment.myapplication.repository.WeatherForecastRepository;
import com.conneapp.assessment.myapplication.viewmodels.MainViewModelFactory;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<WeatherForecastRepository> weatherForecastRepositoryProvider;

  private final Provider<MainViewModelFactory> mainViewModelFactoryProvider;

  public MainActivity_MembersInjector(
      Provider<WeatherForecastRepository> weatherForecastRepositoryProvider,
      Provider<MainViewModelFactory> mainViewModelFactoryProvider) {
    this.weatherForecastRepositoryProvider = weatherForecastRepositoryProvider;
    this.mainViewModelFactoryProvider = mainViewModelFactoryProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<WeatherForecastRepository> weatherForecastRepositoryProvider,
      Provider<MainViewModelFactory> mainViewModelFactoryProvider) {
    return new MainActivity_MembersInjector(weatherForecastRepositoryProvider, mainViewModelFactoryProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectWeatherForecastRepository(instance, weatherForecastRepositoryProvider.get());
    injectMainViewModelFactory(instance, mainViewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.conneapp.assessment.myapplication.MainActivity.weatherForecastRepository")
  public static void injectWeatherForecastRepository(MainActivity instance,
      WeatherForecastRepository weatherForecastRepository) {
    instance.weatherForecastRepository = weatherForecastRepository;
  }

  @InjectedFieldSignature("com.conneapp.assessment.myapplication.MainActivity.mainViewModelFactory")
  public static void injectMainViewModelFactory(MainActivity instance,
      MainViewModelFactory mainViewModelFactory) {
    instance.mainViewModelFactory = mainViewModelFactory;
  }
}
